{"version":3,"sources":["assets/icons/logo.svg","assets/icons/magnifier.svg","assets/icons/bulb.svg","assets/icons/logout.svg","assets/icons/pen.svg","assets/icons/twitter.svg","assets/icons/plus.svg","assets/icons/link.svg","theme/GlobalStyles.js","theme/mainTheme.js","context/index.js","templates/MainTemplate.js","components/atoms/Heading/Heading.js","templates/AuthTemplate.js","components/atoms/Input/Input.js","hoc/withContext.js","components/atoms/Button/Button.js","data/constans/index.js","data/actions/index.js","routes/index.js","views/LoginPage.js","components/atoms/ButtonIcon/ButtonIcon.js","components/organisms/Sidebar/Sidebar.js","templates/UserPageTemplate.js","components/atoms/Paragraph/Paragraph.js","components/organisms/NewItemBar/NewItemBar.js","templates/GridViewTemplate.js","components/molecules/Card/Card.js","views/Notes.js","views/Twitters.js","views/Articles.js","templates/DetailsTemplate.js","views/DetailsPage.js","data/reducers/index.js","views/Root.js","data/store/index.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","notes","twitters","articles","grey100","grey200","black","light","bold","fontSize","xxs","xs","s","m","l","xl","PageContext","React","createContext","withRouter","children","location","useState","pageType","setPageType","pageValidation","useCallback","pathname","filter","page","includes","currentPage","useEffect","Provider","value","Heading","styled","h1","big","StyledWrapper","div","StyledLogo","img","StyledAuthCard","AuthTemplate","src","logoImg","alt","Input","input","regular","grey300","search","css","magnifierIcon","withContext","Component","props","Consumer","context","pageContext","Button","button","secendary","constans","REMOVE_ITEM","authenticate","register","fetch","addItems","removeItems","fetchItems","itemType","dispatch","getState","type","axios","get","params","userID","user","then","data","payload","catch","err","routes","StyledForm","Form","StyledInput","StyledHeading","StyledButton","main","LoginPage","authenticateAction","registerAction","isRegister","setIsRegister","initialValues","username","password","onSubmit","handleRegister","handleLogin","handleChange","handleBlur","values","console","log","to","name","placeholder","onChange","onBlur","title","onClick","mapDispatchToProps","post","defaultProps","connect","ButtonIcon","icon","SidebarWrapper","InnerWrapper","center","flexEnd","StyledLogoLink","NavLink","logoIcon","Sidebar","as","Link","penIcon","twitterIcon","bulbIcon","logoutIcon","StyledDiv","UserPageTemplate","Paragraph","p","isVisible","StyledTextArea","headShake","keyframes","StyledError","startAnimation","NewItemBar","setIsVisible","addItem","content","articleUrl","twitterName","created","moment","Date","format","validate","errors","test","touched","handleSubmit","itemContent","StyledGrid","StyledPageHeader","StyledParagraph","StyledButtonIcon","GridViewTemplate","length","plusIcon","flex","DateInfo","StyleHeading","StyledAvatar","StyledLinkButton","a","LinkIcon","Card","id","removeItem","redirected","setRedirected","href","e","stopPropagation","delete","Notes","fetchNotes","map","_id","cardType","key","state","Twitter","fetchTwitters","Articles","fetchArticles","StyledInnerWrapper","StyledLink","DetailsTemplate","ownProps","activeItem","item","match","setItem","initialState","rootReducer","action","node","ADD_ITEM","Root","store","preloadedState","middlewares","thunk","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","path","component","exact","render","DetailsPage","Twiiters","Article","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bab5cd63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.93d4f3ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/bulb.af737b55.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.0969c92b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.051af8ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.e43ce6c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/link.6fc1d8fe.svg\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;600&display=swap');\n\n  *, *::before, *::after{\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    padding: 0;\n    margin: 0;\n  }\n  html {\n    font-size: 62.5%; // 1 rem === 10px\n  }\n  body{\n    font-size: 1.6rem; // happy rem :)\n    font-family: \"Montserrat\", sans-serif\n  }\n`;\n\nexport default GlobalStyle;\n","export const theme = {\n  notes: 'hsl(49, 100%, 58%)',\n  twitters: 'hsl(196, 83%, 75%)',\n  articles: 'hsl(106, 47%, 64%)',\n  grey100: 'hsl(0, 0%, 96%)',\n  grey200: 'hsl(0, 0%, 90%)',\n  black: 'hsl(0, 0%, 0%)',\n  light: 300,\n  bold: 600,\n  fontSize: {\n    xxs: '1rem',\n    xs: '1.2rem',\n    s: '1.6rem',\n    m: '2.1rem',\n    l: '2.4rem',\n    xl: '4rem',\n  },\n};\n","import React from 'react';\n\nconst PageContext = React.createContext('notes');\n\nexport default PageContext;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\n\nimport GlobalStyle from 'theme/GlobalStyles';\nimport { theme } from 'theme/mainTheme';\n\nimport { withRouter } from 'react-router-dom';\n\nimport PageContext from 'context';\n\nconst MainTemplate = ({ children, location }) => {\n  const [pageType, setPageType] = useState('notes');\n\n  const pageValidation = useCallback(() => {\n    const pageTypes = ['notes', 'twitters', 'articles'];\n    const { pathname } = location;\n    const [currentPage] = pageTypes.filter((page) => pathname.includes(page));\n    setPageType(currentPage);\n  }, [location]);\n\n  useEffect(() => {\n    pageValidation();\n    return () => {\n      pageValidation();\n    };\n  });\n  return (\n    <>\n      <PageContext.Provider value={pageType}>\n        <GlobalStyle />\n        <ThemeProvider theme={theme}>{children}</ThemeProvider>\n      </PageContext.Provider>\n    </>\n  );\n};\nMainTemplate.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default withRouter(MainTemplate);\n","import styled from 'styled-components';\n\nconst Heading = styled.h1`\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\n  font-weight: ${({ theme }) => theme.bold};\n`;\n\nexport default Heading;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styled from 'styled-components';\nimport Heading from 'components/atoms/Heading/Heading';\nimport logoImg from 'assets/icons/logo.svg';\n\nconst StyledWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${({ theme }) => theme.notes};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nconst StyledLogo = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nconst StyledAuthCard = styled.div`\n  width: 400px;\n  height: 400px;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 10px 20px -10px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AuthTemplate = ({ children }) => (\n  <StyledWrapper>\n    <StyledLogo src={logoImg} alt=\"logo\" />\n    <Heading>Your new favorite online notes experience</Heading>\n    <StyledAuthCard>{children}</StyledAuthCard>\n  </StyledWrapper>\n);\n\nexport default AuthTemplate;\n","import styled, { css } from 'styled-components';\nimport magnifierIcon from 'assets/icons/magnifier.svg';\n\nconst Input = styled.input`\n  padding: 15px 30px;\n  font-size: ${({ theme }) => theme.fontSize.s};\n  font-weight: ${({ theme }) => theme.regular};\n  background-color: ${({ theme }) => theme.grey100};\n  border: none;\n  border-radius: 50px;\n  ::placeholder {\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: ${({ theme }) => theme.grey300};\n  }\n  ${({ search }) =>\n    search &&\n    css`\n      padding: 10px 20px 10px 40px;\n      font-size: ${({ theme }) => theme.fontSize.xs};\n      background-image: url(${magnifierIcon});\n      background-size: 20px;\n      background-position: 10px 50%;\n      background-repeat: no-repeat;\n    `}\n`;\nexport default Input;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PageContext from 'context';\n\nexport const withContext = (Component) => {\n  return function contextComponent(props) {\n    return (\n      <PageContext.Consumer>\n        {(context) => <Component {...props} pageContext={context} />}\n      </PageContext.Consumer>\n    );\n  };\n};\n","import styled, { css } from 'styled-components';\nimport { withContext } from 'hoc/withContext';\n\nconst Button = withContext(styled.button`\n  border: none;\n  width: 220px;\n  height: 47px;\n  background-color: ${({ theme, pageContext }) => theme[pageContext]};\n  border-radius: 50px;\n  font-weight: ${({ theme }) => theme.bold};\n  font-size: 16px;\n  text-transform: uppercase;\n\n  ${({ secendary }) =>\n    secendary &&\n    css`\n      background-color: hsl(0, 0%, 90%);\n      width: 105px;\n      height: 30px;\n      font-size: 10px;\n    `}\n`);\n\nexport default Button;\n","export const constans = {\n  REMOVE_ITEM: 'REMOVE_ITEM',\n};\nexport const authenticate = {\n  AUTHENTICATE_REQUEST: 'AUTHENTICATE_REQUEST',\n  AUTHENTICATE_SUCCES: 'AUTHENTICATE_SUCCES',\n  AUTHENTICATE_FAILURE: 'AUTHENTICATE_FAILURE',\n};\nexport const register = {\n  REGISTER_REQUEST: 'REGISTER_REQUEST',\n  REGISTER_SUCCES: 'REGISTER_SUCCES',\n  REGISTER_FAILURE: 'REGISTER_FAILURE',\n};\nexport const fetch = {\n  FETCH_REQUEST: 'FETCH_REQUEST',\n  FETCH_SUCCES: 'FETCH_SUCCES',\n  FETCH_FAILURE: 'FETCH_FAILURE',\n};\nexport const addItems = {\n  ADD_ITEM_REQUEST: 'ADD_ITEM_REQUEST',\n  ADD_ITEM_SUCCES: 'ADD_ITEM_SUCCES',\n  ADD_ITEM_FAILURE: 'ADD_ITEM_FAILURE',\n};\nexport const removeItems = {\n  REMOVE_ITEM_REQUEST: 'REMOVE_ITEM_REQUEST',\n  REMOVE_ITEM_SUCCES: 'REMOVE_ITEM_SUCCES',\n  REMOVE_ITEM_FAILURE: 'REMOVE_ITEM_FAILURE',\n};\n","import { authenticate, register, fetch, addItems, removeItems } from 'data/constans';\nimport axios from 'axios';\n\nexport const removeItem = (itemType, id) => (dispatch) => {\n  dispatch({ type: removeItems.REMOVE_ITEM_REQUEST });\n  return axios\n    .delete(`http://localhost:9000/api/note/${id}`)\n    .then(() => {\n      dispatch({ type: removeItems.REMOVE_ITEM_SUCCES, payload: { itemType, id } });\n    })\n    .catch((err) => {\n      dispatch({ type: removeItems.REMOVE_ITEM_FAILURE });\n      throw err;\n    });\n};\n\nexport const addItem = (itemType, itemContent) => (dispatch, getState) => {\n  dispatch({ type: addItems.ADD_ITEM_REQUEST });\n  return axios\n    .post('http://localhost:9000/api/note', {\n      userID: getState().user.userID,\n      type: itemType,\n      ...itemContent,\n    })\n    .then(({ data }) => {\n      dispatch({\n        type: addItems.ADD_ITEM_SUCCES,\n        payload: {\n          itemType,\n          data,\n        },\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: addItems.ADD_ITEM_FAILURE });\n      throw err;\n    });\n};\n\nexport const authenticateAction = (username, password) => (dispatch) => {\n  dispatch({ type: authenticate.AUTHENTICATE_REQUEST });\n  return axios\n    .post('http://localhost:9000/api/user/login', { username, password })\n    .then((payload) => {\n      dispatch({ type: authenticate.AUTHENTICATE_SUCCES, payload });\n    })\n    .catch((err) => {\n      dispatch({ type: authenticate.AUTHENTICATE_FAILURE });\n      throw err;\n    });\n};\n\nexport const registerAction = (username, password, setIsRegister) => (dispatch) => {\n  dispatch({ type: register.REGISTER_REQUEST });\n  return axios\n    .post('http://localhost:9000/api/user/register', { username, password })\n    .then((payload) => {\n      dispatch({ type: register.REGISTER_SUCCES, payload });\n      setIsRegister(false);\n    })\n    .catch((err) => {\n      dispatch({ type: register.REGISTER_FAILURE });\n      throw err;\n    });\n};\nexport const fetchItems = (itemType) => (dispatch, getState) => {\n  dispatch({ type: fetch.FETCH_REQUEST });\n  return axios\n    .get('http://localhost:9000/api/notes/type', {\n      params: {\n        type: itemType,\n        userID: getState().user.userID,\n      },\n    })\n    .then(({ data }) => {\n      dispatch({\n        type: fetch.FETCH_SUCCES,\n        payload: {\n          data,\n          itemType,\n        },\n      });\n    })\n    .catch((err) => {\n      dispatch({ type: fetch.FETCH_FAILURE });\n      throw err;\n    });\n};\n","export const routes = {\n  home: '/',\n  notes: '/notes',\n  note: '/notes/:id',\n  twitters: '/twitters',\n  twitter: '/twitters/:id',\n  articles: '/articles',\n  article: '/articles/:id',\n  login: '/login',\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { Formik, Form } from 'formik';\nimport AuthTemplate from 'templates/AuthTemplate';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Input from 'components/atoms/Input/Input';\nimport Button from 'components/atoms/Button/Button';\nimport { connect } from 'react-redux';\nimport { authenticateAction, registerAction } from 'data/actions';\nimport { routes } from 'routes';\nimport { Redirect } from 'react-router-dom';\n\nconst StyledForm = styled(Form)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nconst StyledInput = styled(Input)`\n  margin: 0 0 30px 0;\n  height: 40px;\n  width: 300px;\n`;\nconst StyledHeading = styled(Heading)`\n  margin-bottom: 20px;\n`;\nconst StyledButton = styled(Button)`\n  ${({ register }) =>\n    register &&\n    css`\n      display: block;\n      font-weight: ${({ theme }) => theme.bold};\n      font-size: ${({ theme }) => theme.fontSize.xs};\n      color: black;\n      text-transform: uppercase;\n      margin: 20px;\n    `}\n  ${({ main }) =>\n    main &&\n    css`\n      background-color: ${({ theme }) => theme.notes};\n    `}\n`;\n\n// eslint-disable-next-line no-shadow\nconst LoginPage = ({ user, authenticateAction, registerAction }) => {\n  const [isRegister, setIsRegister] = useState(false);\n  const handleRegister = (username, password) => {\n    registerAction(username, password, setIsRegister);\n  };\n  const handleLogin = (username, password) => {\n    authenticateAction(username, password);\n  };\n  return (\n    <AuthTemplate>\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={({ username, password }) =>\n          isRegister ? handleRegister(username, password) : handleLogin(username, password)\n        }\n      >\n        {({ handleChange, handleBlur, values }) => {\n          if (user) {\n            console.log(user);\n            return <Redirect to={routes.home} />;\n          }\n          return (\n            <>\n              <StyledHeading>{isRegister ? 'Join To Us' : 'Sing In'}</StyledHeading>\n              <StyledForm>\n                <StyledInput\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Login\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.title}\n                />\n                <StyledInput\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.title}\n                />\n                <StyledButton main type=\"submit\">\n                  {isRegister ? 'Register' : 'Log in'}\n                </StyledButton>\n              </StyledForm>\n              <StyledButton register onClick={() => setIsRegister(!isRegister)}>\n                {isRegister ? 'Back to Login' : 'Create new account'}\n              </StyledButton>\n            </>\n          );\n        }}\n      </Formik>\n    </AuthTemplate>\n  );\n};\n\nconst mapStateToProps = ({ user = null }) => ({\n  user,\n});\n\nconst mapDispatchToProps = {\n  authenticateAction,\n  registerAction,\n};\n\nLoginPage.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  user: PropTypes.object,\n  authenticateAction: PropTypes.func.isRequired,\n  registerAction: PropTypes.func.isRequired,\n};\nLoginPage.defaultProps = {\n  user: null,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import styled from 'styled-components';\n\nconst ButtonIcon = styled.button`\n  display: block;\n  width: 67px;\n  height: 67px;\n  border-radius: 20px;\n  background-image: url(${({ icon }) => icon});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  background-size: 40%;\n  border: none;\n\n  &.active {\n    background-color: white;\n  }\n`;\n\nexport default ButtonIcon;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { NavLink, Link } from 'react-router-dom';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport bulbIcon from 'assets/icons/bulb.svg';\nimport logoutIcon from 'assets/icons/logout.svg';\nimport penIcon from 'assets/icons/pen.svg';\nimport twitterIcon from 'assets/icons/twitter.svg';\nimport logoIcon from 'assets/icons/logo.svg';\nimport { withContext } from 'hoc/withContext';\n\nconst SidebarWrapper = withContext(styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 150px;\n  height: 100vh;\n  background-color: ${({ theme, pageContext }) => theme[pageContext]};\n  display: grid;\n  grid-template-rows: 1.5fr 4fr 1fr;\n`);\n\nconst InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${({ center }) =>\n    center &&\n    css`\n      justify-content: center;\n    `}\n  ${({ flexEnd }) =>\n    flexEnd &&\n    css`\n      justify-content: flex-end;\n    `}\n`;\n\nconst StyledLogoLink = styled(NavLink)`\n  display: block;\n  width: 67px;\n  height: 67px;\n  background-image: url(${logoIcon});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  background-size: 80%;\n  border: none;\n`;\n\nconst Sidebar = () => {\n  return (\n    <SidebarWrapper>\n      <InnerWrapper center>\n        <StyledLogoLink as={Link} to=\"/\" />\n      </InnerWrapper>\n      <InnerWrapper>\n        <ButtonIcon as={NavLink} to=\"/notes\" icon={penIcon} />\n        <ButtonIcon as={NavLink} to=\"/twitters\" icon={twitterIcon} />\n        <ButtonIcon as={NavLink} to=\"/articles\" icon={bulbIcon} />\n      </InnerWrapper>\n      <InnerWrapper flexEnd>\n        <ButtonIcon as={Link} to=\"/\" icon={logoutIcon} />\n      </InnerWrapper>\n    </SidebarWrapper>\n  );\n};\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sidebar from 'components/organisms/Sidebar/Sidebar';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  padding-left: 150px;\n`;\n\nconst UserPageTemplate = ({ children }) => {\n  return (\n    <>\n      <Sidebar />\n      <StyledDiv>{children}</StyledDiv>\n    </>\n  );\n};\nUserPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default UserPageTemplate;\n","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  font-size: ${({ theme }) => theme.fontSize.s};\n  font-weight: ${({ theme }) => theme.light};\n`;\n\nexport default Paragraph;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes, css } from 'styled-components';\nimport Input from 'components/atoms/Input/Input';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Button from 'components/atoms/Button/Button';\nimport { withContext } from 'hoc/withContext';\nimport { addItem } from 'data/actions';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport moment from 'moment';\n\nconst StyledWrapper = withContext(styled.div`\n  border-left: 10px solid ${({ theme, pageContext }) => theme[pageContext]};\n  z-index: 29;\n  position: fixed;\n  display: flex;\n  padding: 80px 90px;\n  flex-direction: column;\n  right: 0;\n  top: 0;\n  height: 100vh;\n  width: 680px;\n  background-color: white;\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\n  transform: ${({ isVisible }) => (isVisible ? 'translate(0%)' : 'translate(100%)')};\n  transition: transform 0.4s ease-in-out;\n`);\nconst StyledTextArea = styled(Input)`\n  resize: none;\n  margin: 0;\n  border-radius: 20px;\n  height: 30vh;\n  width: 100%;\n`;\nconst StyledInput = styled(Input)`\n  width: 100%;\n`;\nconst StyledButton = styled(Button)`\n  margin: 5px;\n`;\nconst StyledHeading = styled(Heading)`\n  margin-bottom: 10px;\n`;\n\nconst headShake = keyframes`\n    10%, 90% {\n    transform: translate3d(0, 0, 0);\n  }\n  20%, 80% {\n    transform: translate3d(2px, 0, 0);\n  }\n\n  30%, 50%, 70% {\n    transform: translate3d(-4px, 0, 0);\n  }\n\n  40%, 60% {\n    transform: translate3d(4px, 0, 0);\n  }\n}\n`;\nconst StyledError = styled.div`\n  color: red;\n  margin: 10px 0;\n  transform: translate3d(0, 0, 0);\n  ${({ startAnimation }) =>\n    startAnimation &&\n    css`\n      animation: ${headShake} 1s cubic-bezier(0.36, 0.07, 0.19, 0.97) reverse 1;\n    `}\n`;\n\nconst NewItemBar = ({ isVisible, setIsVisible, pageContext, addItem }) => {\n  return (\n    <StyledWrapper isVisible={isVisible}>\n      <StyledHeading big>Create new {pageContext} </StyledHeading>\n      <Formik\n        initialValues={{\n          title: '',\n          content: '',\n          articleUrl: '',\n          twitterName: '',\n          created: moment(new Date()).format('DD/MM/YYYY'),\n        }}\n        validate={(values) => {\n          const errors = {};\n          if (!values.title) {\n            errors.title = `Title is required`;\n          } else if (!/^[a-zA-Z1-9]{3,}$/i.test(values.title)) {\n            errors.title = 'Not enough characters';\n          }\n          if (!values.twitterName && pageContext === 'twitters') {\n            errors.twitterName = `Account Name is required`;\n          }\n          if (!values.articleUrl && pageContext === 'articles') {\n            errors.articleUrl = `Link is required`;\n          }\n          if (!values.content) {\n            errors.content = `Content is required`;\n          }\n          return errors;\n        }}\n        onSubmit={(values) => {\n          addItem(pageContext, values);\n          setIsVisible(false);\n        }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n          <form onSubmit={handleSubmit}>\n            <StyledInput\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"title\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.title}\n            />\n            <StyledError startAnimation={errors.title && touched.title && errors.title}>\n              {errors.title && touched.title && errors.title}\n            </StyledError>\n            {pageContext === 'twitters' && (\n              <>\n                <StyledInput\n                  type=\"text\"\n                  name=\"twitterName\"\n                  placeholder=\"account name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.twitterName}\n                />\n                <StyledError\n                  startAnimation={errors.twitterName && touched.twitterName && errors.twitterName}\n                >\n                  {errors.twitterName && touched.twitterName && errors.twitterName}\n                </StyledError>\n              </>\n            )}\n            {pageContext === 'articles' && (\n              <>\n                <StyledInput\n                  type=\"text\"\n                  name=\"articleUrl\"\n                  placeholder=\"link\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  value={values.articleUrl}\n                />\n                <StyledError\n                  startAnimation={errors.articleUrl && touched.articleUrl && errors.articleUrl}\n                >\n                  {errors.articleUrl && touched.articleUrl && errors.articleUrl}\n                </StyledError>\n              </>\n            )}\n            <StyledTextArea\n              name=\"content\"\n              as=\"textarea\"\n              placeholder=\"text\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.content}\n            />\n            <StyledError startAnimation={errors.content && touched.content && errors.content}>\n              {errors.content && touched.content && errors.content}\n            </StyledError>\n            <StyledButton type=\"submit\">Add Note</StyledButton>\n          </form>\n        )}\n      </Formik>\n    </StyledWrapper>\n  );\n};\n\nNewItemBar.propTypes = {\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  isVisible: PropTypes.bool,\n  setIsVisible: PropTypes.func.isRequired,\n  addItem: PropTypes.func.isRequired,\n};\n\nNewItemBar.defaultProps = {\n  pageContext: 'notes',\n  isVisible: false,\n};\n\nconst mapDispatchToProps = {\n  addItem,\n};\n\nexport default connect(null, mapDispatchToProps)(withContext(NewItemBar));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport UserPageTemplate from 'templates/UserPageTemplate';\nimport Input from 'components/atoms/Input/Input';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport { withContext } from 'hoc/withContext';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport plusIcon from 'assets/icons/plus.svg';\nimport NewItemBar from 'components/organisms/NewItemBar/NewItemBar';\n\nconst StyledWrapper = styled.div`\n  padding: 25px 150px 25px 75px;\n`;\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 45px;\n  @media (max-width: 1100px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 20px;\n  }\n  @media (max-width: 800px) {\n    grid-template-columns: repeat(1, 1fr);\n    grid-gap: 0;\n  }\n`;\nconst StyledPageHeader = styled.div`\n  margin: 25px 0 25px 0;\n  ::first-letter {\n    text-transform: uppercase;\n  }\n`;\nconst StyledHeading = styled(Heading)`\n  margin: 25px 0 20px 0;\n`;\nconst StyledParagraph = styled(Paragraph)`\n  font-weight: ${({ theme }) => theme.bold};\n  margin: 10px 0 0 0;\n`;\nconst StyledButtonIcon = withContext(styled(ButtonIcon)`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  z-index: 30;\n  border-radius: 50%;\n  background-color: ${({ theme, pageContext }) => theme[pageContext]};\n  background-size: 35%;\n  transform: ${({ isVisible }) => (isVisible ? 'rotate(-135deg)' : 'rotate(0deg)')};\n  transition: transform 0.4s ease-in-out;\n`);\n\nconst GridViewTemplate = ({ children, pageContext }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  return (\n    <UserPageTemplate>\n      <StyledWrapper>\n        <StyledPageHeader>\n          <StyledHeading big as=\"h1\">\n            {pageContext}\n          </StyledHeading>\n          <Input search placeholder=\"Search\" />\n          <StyledParagraph>\n            {children.length > 1 ? `${children.length} ${pageContext}` : null}\n          </StyledParagraph>\n        </StyledPageHeader>\n        <StyledGrid>{children}</StyledGrid>\n        <NewItemBar setIsVisible={setIsVisible} isVisible={isVisible} />\n        <StyledButtonIcon\n          onClick={() => setIsVisible(!isVisible)}\n          icon={plusIcon}\n          isVisible={isVisible}\n        />\n      </StyledWrapper>\n    </UserPageTemplate>\n  );\n};\nGridViewTemplate.propTypes = {\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  children: PropTypes.node.isRequired,\n};\nGridViewTemplate.defaultProps = {\n  pageContext: 'notes',\n};\n\nexport default withContext(GridViewTemplate);\n","/* eslint-disable no-shadow */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport styled, { css } from 'styled-components';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Button from 'components/atoms/Button/Button';\nimport LinkIcon from 'assets/icons/link.svg';\nimport { connect } from 'react-redux';\nimport { removeItem } from 'data/actions';\nimport { withContext } from 'hoc/withContext';\n\nconst StyledWrapper = styled.div`\n  min-height: 380px;\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.9);\n  margin: 10px 0;\n  border-radius: 10px;\n  overflow: hidden;\n  display: grid;\n  grid-template-rows: 1fr 4fr;\n`;\nconst InnerWrapper = withContext(styled.div`\n  position: relative;\n  padding: 17px 30px;\n  background-color: ${({ theme, pageContext }) => theme[pageContext]};\n  ${({ flex }) =>\n    flex &&\n    css`\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    `}\n`);\nconst DateInfo = styled.div`\n  margin: 0 0 10px;\n  font-weight: ${({ theme }) => theme.bold};\n  font-size: ${({ theme }) => theme.fontSize.xs};\n`;\nconst StyleHeading = styled(Heading)`\n  margin: 5px 0 0;\n`;\nconst StyledAvatar = styled.img`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  height: 86px;\n  width: 86px;\n  border-radius: 50%;\n  border: 5px solid ${({ theme }) => theme.twitters};\n`;\nconst StyledLinkButton = styled.a`\n  display: block;\n  width: 47px;\n  height: 47px;\n  border-radius: 50px;\n  background: white url(${LinkIcon});\n  background-size: 60%;\n  background-position: 50%;\n  background-repeat: no-repeat;\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nconst Card = ({\n  pageContext,\n  title,\n  created,\n  twitterName,\n  articleUrl,\n  content,\n  id,\n  removeItem,\n}) => {\n  const [redirected, setRedirected] = useState(false);\n  if (redirected === true) {\n    return <Redirect to={`${pageContext}/${id}`} />;\n  }\n  return (\n    <StyledWrapper onClick={() => setRedirected(true)}>\n      <InnerWrapper>\n        <StyleHeading>{title}</StyleHeading>\n        <DateInfo>Created - {created}</DateInfo>\n        {pageContext === 'twitters' && (\n          <StyledAvatar src={`https://avatars.io/twitter/${twitterName}`} />\n        )}\n        {pageContext === 'articles' && <StyledLinkButton href={articleUrl} />}\n      </InnerWrapper>\n      <InnerWrapper flex>\n        <Paragraph>{content}</Paragraph>\n        <Button\n          secendary\n          onClick={(e) => {\n            e.stopPropagation();\n            removeItem(pageContext, id);\n          }}\n        >\n          Remove\n        </Button>\n      </InnerWrapper>\n    </StyledWrapper>\n  );\n};\n\nCard.propTypes = {\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  title: PropTypes.string.isRequired,\n  created: PropTypes.string.isRequired,\n  twitterName: PropTypes.string,\n  articleUrl: PropTypes.string,\n  content: PropTypes.string.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  removeItem: PropTypes.func.isRequired,\n};\nCard.defaultProps = {\n  pageContext: 'notes',\n  twitterName: 'unknown',\n  articleUrl: '/',\n};\n\nconst mapDispatchToProps = {\n  removeItem,\n};\n\nexport default connect(null, mapDispatchToProps)(withContext(Card));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport GridViewTemplate from 'templates/GridViewTemplate';\nimport Card from 'components/molecules/Card/Card';\nimport { connect } from 'react-redux';\nimport { fetchItems } from 'data/actions';\n\nconst Notes = ({ fetchNotes, notes }) => {\n  useEffect(() => {\n    fetchNotes();\n    return () => {\n      fetchNotes();\n    };\n  }, [fetchNotes]);\n  return (\n    <GridViewTemplate>\n      {notes.map(({ title, content, created, _id: id }) => (\n        <Card cardType=\"notes\" title={title} content={content} created={created} key={id} id={id} />\n      ))}\n    </GridViewTemplate>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  notes: state.notes,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchNotes: () => dispatch(fetchItems('notes')),\n});\nNotes.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  notes: PropTypes.array,\n  fetchNotes: PropTypes.func.isRequired,\n};\nNotes.defaultProps = {\n  notes: [],\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);\n","/* eslint-disable no-shadow */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport GridViewTemplate from 'templates/GridViewTemplate';\nimport Card from 'components/molecules/Card/Card';\nimport { connect } from 'react-redux';\nimport { fetchItems } from 'data/actions';\n\nconst Twitter = ({ fetchTwitters, twitters }) => {\n  useEffect(() => {\n    fetchTwitters();\n    return () => fetchTwitters;\n  }, [fetchTwitters]);\n  return (\n    <GridViewTemplate pageType=\"twitters\">\n      {twitters.map(({ title, content, twitterName, created, _id: id }) => (\n        <Card\n          cardType=\"twitters\"\n          title={title}\n          content={content}\n          twitterName={twitterName}\n          created={created}\n          key={id}\n          id={id}\n        />\n      ))}\n    </GridViewTemplate>\n  );\n};\nconst mapStateToProps = (state) => ({\n  twitters: state.twitters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTwitters: () => dispatch(fetchItems('twitters')),\n});\n\nTwitter.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  twitters: PropTypes.array,\n  fetchTwitters: PropTypes.func.isRequired,\n};\nTwitter.defaultProps = {\n  twitters: [],\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Twitter);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport GridViewTemplate from 'templates/GridViewTemplate';\nimport Card from 'components/molecules/Card/Card';\nimport { connect } from 'react-redux';\nimport { fetchItems } from 'data/actions';\n\nconst Articles = ({ fetchArticles, articles }) => {\n  useEffect(() => {\n    fetchArticles();\n    return () => fetchArticles;\n  }, [fetchArticles]);\n  return (\n    <GridViewTemplate pageType=\"articles\">\n      {articles.map(({ title, content, articleUrl, created, _id: id }) => (\n        <Card\n          cardType=\"articles\"\n          title={title}\n          content={content}\n          articleUrl={articleUrl}\n          created={created}\n          key={id}\n          id={id}\n        />\n      ))}\n    </GridViewTemplate>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  articles: state.articles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchArticles: () => dispatch(fetchItems('articles')),\n});\nArticles.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  articles: PropTypes.array,\n  fetchArticles: PropTypes.func.isRequired,\n};\nArticles.defaultProps = {\n  articles: [],\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Articles);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport UserPageTemplate from 'templates/UserPageTemplate';\nimport Button from 'components/atoms/Button/Button';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\nimport { withContext } from 'hoc/withContext';\n\nconst StyledWrapper = styled.div`\n  padding: 50px 0 0 100px;\n`;\nconst StyledInnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px 50px;\n  max-width: 50vw;\n`;\nconst StyledAvatar = styled.img`\n  height: 86px;\n  width: 86px;\n  border-radius: 50%;\n  border: 5px solid ${({ theme }) => theme.twitters};\n`;\nconst StyledParagraph = styled(Paragraph)`\n  margin: 20px 0px;\n  max-width: 50vw;\n  ${({ bold }) =>\n    bold &&\n    css`\n      font-weight: ${({ theme }) => theme.bold};\n      margin: 10px 0px;\n    `}\n`;\nconst StyledButton = styled(Button)`\n  margin: 50px 0px;\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  border-radius: 50px;\n  font-weight: ${({ theme }) => theme.bold};\n  text-decoration: none;\n  color: black;\n`;\n\nconst DetailsTemplate = ({ pageContext, title, created, content, articleUrl, twitterName }) => {\n  return (\n    <UserPageTemplate>\n      <StyledWrapper>\n        <StyledInnerWrapper>\n          <Heading big>{title}</Heading>\n          {pageContext === 'twitters' && (\n            <StyledAvatar src={`https://avatars.io/twitter/${twitterName}`} />\n          )}\n          {pageContext === 'articles' && <Link to={`${articleUrl}`} />}\n        </StyledInnerWrapper>\n        <StyledParagraph bold>CREATED - {created}</StyledParagraph>\n        <StyledParagraph>{content}</StyledParagraph>\n        <StyledButton>\n          <StyledLink to={`/${pageContext}`}>Close / Save</StyledLink>\n        </StyledButton>\n      </StyledWrapper>\n    </UserPageTemplate>\n  );\n};\n\nDetailsTemplate.propTypes = {\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  created: PropTypes.string.isRequired,\n  articleUrl: PropTypes.string,\n  twitterName: PropTypes.string,\n};\nDetailsTemplate.defaultProps = {\n  pageContext: 'notes',\n  articleUrl: '',\n  twitterName: '',\n};\n\nexport default withContext(DetailsTemplate);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport DetailsTemplate from 'templates/DetailsTemplate';\nimport { withContext } from 'hoc/withContext';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst DetailsPage = ({ activeItem, match }) => {\n  const [item, setItem] = useState();\n  useEffect(() => {\n    if (!activeItem) {\n      axios\n        .get(`http://localhost:9000/api/note/${match.params.id}`)\n        .then(({ data }) => {\n          setItem(data);\n        })\n        .catch((err) => {\n          throw err;\n        });\n    } else {\n      const [data] = activeItem;\n      setItem(data);\n    }\n  }, [activeItem, match]);\n\n  return (\n    <>\n      {item && (\n        <DetailsTemplate\n          title={item.title}\n          content={item.content}\n          articleUrl=\"/\"\n          twitterName=\"/\"\n          created={item.created}\n          key={item.id}\n          id={item.id}\n        />\n      )}\n    </>\n  );\n};\n\nDetailsPage.propTypes = {\n  activeItem: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  match: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  if (state[ownProps.pageContext]) {\n    return {\n      activeItem: state[ownProps.pageContext].filter(\n        // eslint-disable-next-line no-underscore-dangle\n        (item) => item._id === ownProps.match.params.id,\n      ),\n    };\n  }\n  return {\n    activeItem: '',\n  };\n};\nexport default withContext(connect(mapStateToProps)(DetailsPage));\n","import { constans, authenticate, fetch, addItems, removeItems } from 'data/constans';\n\nconst initialState = {\n  user: {\n    userID: '5f44ec9e5bcfa9fe4402a7f5',\n  },\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case constans.REMOVE_ITEM:\n      return {\n        ...state,\n        [action.payload.itemType]: [\n          ...state[action.payload.itemType].filter((node) => node.id !== action.payload.id),\n        ],\n      };\n    case constans.ADD_ITEM:\n      return {\n        ...state,\n        [action.payload.itemType]: [...state[action.payload.itemType], action.payload.item],\n      };\n    case authenticate.AUTHENTICATE_SUCCES:\n      return {\n        ...state,\n        user: {\n          // eslint-disable-next-line no-underscore-dangle\n          userID: action.payload.data._id,\n        },\n      };\n    case fetch.FETCH_SUCCES:\n      return {\n        ...state,\n        [action.payload.itemType]: [...action.payload.data],\n      };\n    case addItems.ADD_ITEM_SUCCES:\n      return {\n        ...state,\n        [action.payload.itemType]: [...state[action.payload.itemType], action.payload.data],\n      };\n    case removeItems.REMOVE_ITEM_SUCCES:\n      return {\n        ...state,\n        [action.payload.itemType]: [\n          // eslint-disable-next-line no-underscore-dangle\n          ...state[action.payload.itemType].filter((node) => node._id !== action.payload.id),\n        ],\n      };\n    default:\n      return { ...state };\n  }\n};\nexport default rootReducer;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport MainTemplate from 'templates/MainTemplate';\nimport LoginPage from 'views/LoginPage';\nimport Notes from 'views/Notes';\nimport Twiiters from 'views/Twitters';\nimport Article from 'views/Articles';\nimport DetailsPage from 'views/DetailsPage';\nimport { routes } from 'routes';\nimport { Provider } from 'react-redux';\nimport configureStore from 'data/store';\n\nfunction Root() {\n  const store = configureStore();\n  return (\n    <Provider store={store}>\n      <Router>\n        <MainTemplate>\n          <Switch>\n            <Route path={routes.login} component={LoginPage} />\n            <Route exact path={routes.home} render={() => <Redirect to={routes.notes} />} />\n            <Route exact path={routes.notes} component={Notes} />\n            <Route path={routes.note} component={DetailsPage} />\n            <Route exact path={routes.twitters} component={Twiiters} />\n            <Route path={routes.twitter} component={DetailsPage} />\n            <Route exact path={routes.articles} component={Article} />\n            <Route path={routes.article} component={DetailsPage} />\n            <Route path=\"*\">\n              <h1>Bad Gateway</h1>\n            </Route>\n          </Switch>\n        </MainTemplate>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default Root;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunk];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('../reducers', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from 'views/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}